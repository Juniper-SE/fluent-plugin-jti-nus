# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: session_telemetry.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x17session_telemetry.proto\x1a\x13telemetry_top.proto\":\n\x0fServicesSession\x12\'\n\x11svcs_session_info\x18\x01 \x03(\x0b\x32\x0c.SessionInfo\"\xa6\x02\n\x0bSessionInfo\x12\x1f\n\x0csn_flow_info\x18\x01 \x03(\x0b\x32\t.FlowInfo\x12\x1e\n\x0fsn_svc_set_name\x18\x02 \x01(\tB\x05\x82@\x02\x08\x01\x12\x15\n\rsn_svc_set_id\x18\x03 \x01(\x04\x12\r\n\x05sn_id\x18\x04 \x01(\x04\x12\x10\n\x08sn_flags\x18\x05 \x01(\x04\x12\x11\n\tsn_alg_id\x18\x06 \x01(\x04\x12\x1c\n\x14sn_routing_path_type\x18\x07 \x01(\x04\x12\x1a\n\x12sn_session_timeout\x18\x08 \x01(\x04\x12\x10\n\x08sn_state\x18\t \x01(\x04\x12\x18\n\x10sn_sw_session_id\x18\n \x01(\x04\x12\x11\n\tsn_svc_id\x18\x0b \x01(\x04\x12\x12\n\nsn_offload\x18\x0c \x01(\x08\"\xcf\x02\n\x08\x46lowInfo\x12\x17\n\x08src_addr\x18\x01 \x01(\tB\x05\x82@\x02\x08\x01\x12\x17\n\x08\x64st_addr\x18\x02 \x01(\tB\x05\x82@\x02\x08\x01\x12\x16\n\x0e\x66low_direction\x18\x03 \x01(\r\x12\x10\n\x08src_port\x18\x04 \x01(\r\x12\x10\n\x08\x64st_port\x18\x05 \x01(\r\x12\x11\n\tsrc_is_v6\x18\x06 \x01(\x08\x12\x11\n\tdst_is_v6\x18\x07 \x01(\x08\x12\x11\n\tflow_type\x18\x08 \x01(\r\x12\x12\n\nflow_flags\x18\t \x01(\r\x12\x10\n\x08ip_proto\x18\n \x01(\r\x12\x14\n\x0cidle_timeout\x18\x0b \x01(\x04\x12\x17\n\x0f\x66low_packets_in\x18\x0c \x01(\x04\x12\x18\n\x10\x66low_packets_out\x18\r \x01(\x04\x12\x15\n\rflow_bytes_in\x18\x0e \x01(\x04\x12\x16\n\x0e\x66low_bytes_out\x18\x0f \x01(\x04:E\n\x12jnprScvsSessionExt\x12\x17.JuniperNetworksSensors\x18O \x01(\x0b\x32\x10.ServicesSession"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

ServicesSession = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ServicesSession").msgclass
SessionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("SessionInfo").msgclass
FlowInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FlowInfo").msgclass
