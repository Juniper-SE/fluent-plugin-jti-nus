# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kmd_render.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x10kmd_render.proto\x1a\x13telemetry_top.proto\"\xdd\x07\n\x14junos_key_management\x12X\n\x19ike_security_associations\x18\x97\x01 \x01(\x0b\x32\x34.junos_key_management.ike_security_associations_type\x1a\xea\x06\n\x1eike_security_associations_type\x12u\n\x18ike_security_association\x18\x97\x01 \x03(\x0b\x32R.junos_key_management.ike_security_associations_type.ike_security_association_list\x1a\xd0\x05\n\x1dike_security_association_list\x12\x11\n\tremote_ip\x18\x33 \x01(\t\x12\x10\n\x08local_ip\x18\x34 \x01(\t\x12\x1f\n\x17number_ipsec_sa_created\x18\x35 \x01(\r\x12\x1f\n\x17number_ipsec_sa_deleted\x18\x36 \x01(\r\x12\x1d\n\x15number_ipsec_sa_rekey\x18\x37 \x01(\r\x12\x15\n\rexchange_type\x18\x38 \x01(\t\x12\x10\n\x08in_bytes\x18\x39 \x01(\r\x12\x12\n\nin_packets\x18: \x01(\r\x12\x11\n\tout_bytes\x18; \x01(\r\x12\x13\n\x0bout_packets\x18< \x01(\r\x12\x1f\n\x17\x64\x65lete_payload_received\x18= \x01(\r\x12\"\n\x1a\x64\x65lete_payload_transmitted\x18> \x01(\r\x12$\n\x1c\x64pd_request_payload_received\x18? \x01(\r\x12\'\n\x1f\x64pd_request_payload_transmitted\x18@ \x01(\r\x12%\n\x1d\x64pd_response_payload_received\x18\x41 \x01(\r\x12(\n dpd_response_payload_transmitted\x18\x42 \x01(\r\x12#\n\x1b\x64pd_response_payload_missed\x18\x43 \x01(\r\x12*\n\"dpd_response_payload_maximum_delay\x18\x44 \x01(\r\x12\'\n\x1f\x64pd_response_seq_payload_missed\x18\x45 \x01(\r\x12#\n\x1binvalid_spi_notify_received\x18\x46 \x01(\r\x12&\n\x1einvalid_spi_notify_transmitted\x18G \x01(\r\x12\x18\n\x10routing_instance\x18H \x01(\t:U\n\x1djnpr_junos_key_management_ext\x12\x17.JuniperNetworksSensors\x18\x30 \x01(\x0b\x32\x15.junos_key_management"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Junos_key_management = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_key_management").msgclass
Junos_key_management::Ike_security_associations_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_key_management.ike_security_associations_type").msgclass
Junos_key_management::Ike_security_associations_type::Ike_security_association_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_key_management.ike_security_associations_type.ike_security_association_list").msgclass
