# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mib2d_nd6_oc.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x12mib2d_nd6_oc.proto\x1a\x13telemetry_top.proto\"\xf7\x04\n\x17nd6_information_mib_nd6\x12\x31\n\x04ipv6\x18\x97\x01 \x01(\x0b\x32\".nd6_information_mib_nd6.ipv6_type\x1a\xa8\x04\n\tipv6_type\x12\x45\n\tneighbors\x18\x97\x01 \x01(\x0b\x32\x31.nd6_information_mib_nd6.ipv6_type.neighbors_type\x1a\xd3\x03\n\x0eneighbors_type\x12R\n\x08neighbor\x18\x97\x01 \x03(\x0b\x32?.nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list\x1a\xec\x02\n\rneighbor_list\x12\x11\n\x02ip\x18\x33 \x01(\tB\x05\x82@\x02\x08\x01\x12Z\n\x05state\x18\x97\x01 \x01(\x0b\x32J.nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list.state_type\x1a\xeb\x01\n\nstate_type\x12\n\n\x02ip\x18\x33 \x01(\t\x12\x1a\n\x12link_layer_address\x18\x34 \x01(\t\x12\x0e\n\x06origin\x18\x35 \x01(\t\x12\x11\n\tis_router\x18\x36 \x01(\x08\x12\x16\n\x0eneighbor_state\x18\x37 \x01(\t\x12\x10\n\x08table_id\x18= \x01(\r\x12\x11\n\tis_secure\x18> \x01(\x08\x12\x0e\n\x06\x65xpiry\x18@ \x01(\r\x12\x12\n\nis_publish\x18? \x01(\x08\x12\x16\n\x0einterface_name\x18\x41 \x01(\t\x12\x19\n\x11logical_router_id\x18\x42 \x01(\r:[\n jnpr_nd6_information_mib_nd6_ext\x12\x17.JuniperNetworksSensors\x18\x36 \x01(\x0b\x32\x18.nd6_information_mib_nd6"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Nd6_information_mib_nd6 = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nd6_information_mib_nd6").msgclass
Nd6_information_mib_nd6::Ipv6_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nd6_information_mib_nd6.ipv6_type").msgclass
Nd6_information_mib_nd6::Ipv6_type::Neighbors_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nd6_information_mib_nd6.ipv6_type.neighbors_type").msgclass
Nd6_information_mib_nd6::Ipv6_type::Neighbors_type::Neighbor_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list").msgclass
Nd6_information_mib_nd6::Ipv6_type::Neighbors_type::Neighbor_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list.state_type").msgclass
