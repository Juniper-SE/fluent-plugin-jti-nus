# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cmerror.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\rcmerror.proto\x1a\x13telemetry_top.proto\"\x98\x03\n\x05\x45rror\x12\x19\n\nidentifier\x18\x01 \x01(\tB\x05\x82@\x02\x08\x01\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0c\x63omponent_id\x18\x03 \x01(\r\x12\x10\n\x08\x66ru_type\x18\x04 \x01(\t\x12\x10\n\x08\x66ru_slot\x18\x05 \x01(\r\x12\r\n\x05scope\x18\x06 \x01(\t\x12\x10\n\x08\x63\x61tegory\x18\x07 \x01(\t\x12\x10\n\x08severity\x18\x08 \x01(\t\x12\x11\n\tthreshold\x18\t \x01(\r\x12\r\n\x05limit\x18\n \x01(\r\x12\x19\n\x11raising_threshold\x18\x0b \x01(\r\x12\x1a\n\x12\x63learing_threshold\x18\x0c \x01(\r\x12\x0e\n\x06\x61\x63tion\x18\r \x01(\r\x12\x1c\n\x14\x61\x63tion_handling_type\x18\x0e \x01(\r\x12\x1c\n\x14\x63onfigured_threshold\x18\x0f \x01(\r\x12\x18\n\x10\x63onfigured_limit\x18\x10 \x01(\r\x12\x19\n\x11\x63onfigured_action\x18\x11 \x01(\r\x12\x1f\n\x17\x63onfigured_clear_action\x18\x12 \x01(\r\"p\n\x18GlobalErrorConfiguration\x12\r\n\x05scope\x18\x01 \x01(\t\x12\x10\n\x08\x63\x61tegory\x18\x02 \x01(\t\x12\x10\n\x08severity\x18\x03 \x01(\t\x12\x11\n\tthreshold\x18\x04 \x01(\r\x12\x0e\n\x06\x61\x63tion\x18\x05 \x01(\r\"\xc5\x01\n\x07\x43merror\x12\x1a\n\nerror_item\x18\x01 \x03(\x0b\x32\x06.Error\x12!\n\x19last_configuration_change\x18\x02 \x01(\x04\x12\x19\n\x11wrap_cycle_marker\x18\x03 \x01(\x08\x12\x10\n\x08\x66ru_slot\x18\x04 \x01(\r\x12\x10\n\x08\x66ru_type\x18\x05 \x01(\t\x12<\n\x19global_configuration_item\x18\x06 \x03(\x0b\x32\x19.GlobalErrorConfiguration:;\n\x10jnpr_cmerror_ext\x12\x17.JuniperNetworksSensors\x18\x14 \x01(\x0b\x32\x08.Cmerror"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Error").msgclass
GlobalErrorConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GlobalErrorConfiguration").msgclass
Cmerror = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Cmerror").msgclass
