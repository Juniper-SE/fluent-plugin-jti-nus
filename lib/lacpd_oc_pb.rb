# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lacpd_oc.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x0elacpd_oc.proto\x1a\x13telemetry_top.proto\"\x93\x0c\n\tlacp_lacp\x12%\n\x05state\x18\x97\x01 \x01(\x0b\x32\x15.lacp_lacp.state_type\x12/\n\ninterfaces\x18\x98\x01 \x01(\x0b\x32\x1a.lacp_lacp.interfaces_type\x1a%\n\nstate_type\x12\x17\n\x0fsystem_priority\x18\x33 \x01(\r\x1a\x86\x0b\n\x0finterfaces_type\x12=\n\tinterface\x18\x97\x01 \x03(\x0b\x32).lacp_lacp.interfaces_type.interface_list\x1a\xb3\n\n\x0einterface_list\x12\x13\n\x04name\x18\x33 \x01(\tB\x05\x82@\x02\x08\x01\x12\x44\n\x05state\x18\x97\x01 \x01(\x0b\x32\x34.lacp_lacp.interfaces_type.interface_list.state_type\x12H\n\x07members\x18\x98\x01 \x01(\x0b\x32\x36.lacp_lacp.interfaces_type.interface_list.members_type\x1ao\n\nstate_type\x12\x0c\n\x04name\x18\x33 \x01(\t\x12\x10\n\x08interval\x18\x34 \x01(\t\x12\x11\n\tlacp_mode\x18\x35 \x01(\t\x12\x15\n\rsystem_id_mac\x18\x36 \x01(\t\x12\x17\n\x0fsystem_priority\x18\x37 \x01(\r\x1a\x8a\x08\n\x0cmembers_type\x12S\n\x06member\x18\x97\x01 \x03(\x0b\x32\x42.lacp_lacp.interfaces_type.interface_list.members_type.member_list\x1a\xa4\x07\n\x0bmember_list\x12\x18\n\tinterface\x18\x33 \x01(\tB\x05\x82@\x02\x08\x01\x12]\n\x05state\x18\x97\x01 \x01(\x0b\x32M.lacp_lacp.interfaces_type.interface_list.members_type.member_list.state_type\x1a\x9b\x06\n\nstate_type\x12\x11\n\tinterface\x18\x33 \x01(\t\x12\x10\n\x08\x61\x63tivity\x18\x34 \x01(\t\x12\x0f\n\x07timeout\x18\x35 \x01(\t\x12\x17\n\x0fsynchronization\x18\x36 \x01(\t\x12\x14\n\x0c\x61ggregatable\x18\x37 \x01(\x08\x12\x12\n\ncollecting\x18\x38 \x01(\x08\x12\x14\n\x0c\x64istributing\x18\x39 \x01(\x08\x12\x11\n\tsystem_id\x18: \x01(\t\x12\x10\n\x08oper_key\x18; \x01(\r\x12\x12\n\npartner_id\x18= \x01(\t\x12\x13\n\x0bpartner_key\x18> \x01(\r\x12\x10\n\x08port_num\x18< \x01(\r\x12\x18\n\x10partner_port_num\x18? \x01(\r\x12\x13\n\x0blast_change\x18\x46 \x01(\x04\x12n\n\x08\x63ounters\x18\x97\x01 \x01(\x0b\x32[.lacp_lacp.interfaces_type.interface_list.members_type.member_list.state_type.counters_type\x12\x11\n\tmux_state\x18@ \x01(\t\x12\x17\n\x0fpartner_timeout\x18\x41 \x01(\t\x12\x1f\n\x17partner_synchronization\x18\x42 \x01(\t\x12\x1c\n\x14partner_aggregatable\x18\x43 \x01(\x08\x12\x1a\n\x12partner_collecting\x18\x44 \x01(\x08\x12\x1c\n\x14partner_distributing\x18\x45 \x01(\x08\x1a\xd9\x01\n\rcounters_type\x12\x14\n\x0clacp_in_pkts\x18\x33 \x01(\x04\x12\x15\n\rlacp_out_pkts\x18\x34 \x01(\x04\x12\x16\n\x0elacp_rx_errors\x18\x35 \x01(\x04\x12\x16\n\x0elacp_tx_errors\x18\x36 \x01(\x04\x12\x1b\n\x13lacp_unknown_errors\x18\x37 \x01(\x04\x12\x13\n\x0blacp_errors\x18\x38 \x01(\x04\x12 \n\x18lacp_timeout_transitions\x18: \x01(\x04\x12\x17\n\x0f\x63ollection_time\x18\x39 \x01(\t:?\n\x12jnpr_lacp_lacp_ext\x12\x17.JuniperNetworksSensors\x18\x34 \x01(\x0b\x32\n.lacp_lacp"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Lacp_lacp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp").msgclass
Lacp_lacp::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.state_type").msgclass
Lacp_lacp::Interfaces_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type").msgclass
Lacp_lacp::Interfaces_type::Interface_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type.interface_list").msgclass
Lacp_lacp::Interfaces_type::Interface_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type.interface_list.state_type").msgclass
Lacp_lacp::Interfaces_type::Interface_list::Members_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type.interface_list.members_type").msgclass
Lacp_lacp::Interfaces_type::Interface_list::Members_type::Member_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type.interface_list.members_type.member_list").msgclass
Lacp_lacp::Interfaces_type::Interface_list::Members_type::Member_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type.interface_list.members_type.member_list.state_type").msgclass
Lacp_lacp::Interfaces_type::Interface_list::Members_type::Member_list::State_type::Counters_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("lacp_lacp.interfaces_type.interface_list.members_type.member_list.state_type.counters_type").msgclass
