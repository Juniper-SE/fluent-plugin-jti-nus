# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ipsec_telemetry.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x15ipsec_telemetry.proto\x1a\x13telemetry_top.proto\"\x97\x01\n\x08IPsecVPN\x12+\n\x11ipsec_global_info\x18\x01 \x03(\x0b\x32\x10.IPsecGlobalInfo\x12.\n\x11ipsec_svcset_info\x18\x02 \x03(\x0b\x32\x13.IPsecPerSvcsetInfo\x12.\n\x11ipsec_tunnel_info\x18\x03 \x03(\x0b\x32\x13.IPsecPerTunnelInfo\"\xde\x02\n\x0fIPsecGlobalInfo\x12\x18\n\x10re_pconn_connect\x18\x01 \x01(\x04\x12\x14\n\x0cpconn_status\x18\x02 \x01(\x04\x12\x1e\n\x16sa_trigger_enq_success\x18\x03 \x01(\x04\x12\x1b\n\x13sa_trigger_enq_fail\x18\x04 \x01(\x04\x12 \n\x18sa_trigger_retry_success\x18\x05 \x01(\x04\x12\x1d\n\x15sa_trigger_retry_fail\x18\x06 \x01(\x04\x12\x17\n\x0fsa_trigger_sent\x18\x07 \x01(\x04\x12\x17\n\x0fsa_trigger_fail\x18\x08 \x01(\x04\x12\x18\n\x10sa_trigger_alloc\x18\t \x01(\x04\x12\x1d\n\x15sa_trigger_alloc_fail\x18\n \x01(\x04\x12\x17\n\x0fsa_trigger_free\x18\x0b \x01(\x04\x12\x19\n\x11sa_trig_enq_count\x18\x0c \x01(\x04\"\xdf\x01\n\x12IPsecPerSvcsetInfo\x12\x11\n\tsvcset_id\x18\x01 \x02(\x04\x12\x1a\n\x12rule_lookup_failed\x18\x02 \x01(\x04\x12\x18\n\x10sa_lookup_failed\x18\x03 \x01(\x04\x12\x1a\n\x12\x65xceeds_tunnel_mtu\x18\x04 \x01(\x04\x12\x1a\n\x12\x63lear_pkt_received\x18\x05 \x01(\x04\x12\x18\n\x10\x65sp_pkt_received\x18\x06 \x01(\x04\x12\x16\n\x0e\x65ncap_callback\x18\x07 \x01(\x04\x12\x16\n\x0e\x64\x65\x63\x61p_callback\x18\x08 \x01(\x04\"\xaf\x04\n\x12IPsecPerTunnelInfo\x12\x11\n\ttunnel_id\x18\x01 \x02(\x04\x12\x13\n\x0b\x65sp_rplzero\x18\x02 \x01(\x04\x12\x19\n\x11ipsec_bad_headers\x18\x03 \x01(\x04\x12\x18\n\x10\x65sp_bad_trailers\x18\x04 \x01(\x04\x12\x1b\n\x13\x64\x65\x63\x61p_nxt_proto_err\x18\x05 \x01(\x04\x12\x1b\n\x13\x64\x65\x63\x61p_inner_len_err\x18\x06 \x01(\x04\x12\x15\n\rdecap_hdr_err\x18\x07 \x01(\x04\x12\x1d\n\x15\x64\x65\x63\x61p_inner_saddr_err\x18\x08 \x01(\x04\x12\x1d\n\x15\x64\x65\x63\x61p_inner_daddr_err\x18\t \x01(\x04\x12\x1b\n\x13\x64\x65\x63\x61p_sn_alloc_fail\x18\n \x01(\x04\x12\x19\n\x11\x64\x65\x63\x61p_sn_ext_fail\x18\x0b \x01(\x04\x12\x17\n\x0f\x65sp_auth_failed\x18\x0c \x01(\x04\x12\x1b\n\x13\x64\x65\x63\x61p_reinject_fail\x18\r \x01(\x04\x12\x1f\n\x17\x64\x65\x63\x61p_sn_transient_drop\x18\x0e \x01(\x04\x12\x1b\n\x13\x65sp_rplbeforewindow\x18\x0f \x01(\x04\x12\x18\n\x10\x65sp_rplduplicate\x18\x10 \x01(\x04\x12 \n\x18\x65sp_protected_bytes_sent\x18\x11 \x01(\x04\x12!\n\x19\x65sp_protected_bytes_recvd\x18\x12 \x01(\x04\x12\x10\n\x08\x65ncrypts\x18\x13 \x01(\x04\x12\x10\n\x08\x64\x65\x63rypts\x18\x14 \x01(\x04:;\n\x0fjnprIPsecVPNExt\x12\x17.JuniperNetworksSensors\x18M \x01(\x0b\x32\t.IPsecVPN"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

IPsecVPN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("IPsecVPN").msgclass
IPsecGlobalInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("IPsecGlobalInfo").msgclass
IPsecPerSvcsetInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("IPsecPerSvcsetInfo").msgclass
IPsecPerTunnelInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("IPsecPerTunnelInfo").msgclass
