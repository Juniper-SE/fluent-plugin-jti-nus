# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fabric.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x0c\x66\x61\x62ric.proto\x1a\x13telemetry_top.proto\"\x9a\x01\n\x0e\x66\x61\x62ric_message\x12\x1a\n\x05\x65\x64ges\x18\x01 \x03(\x0b\x32\x0b.edge_stats\x12\x38\n\x08location\x18\x02 \x01(\x0e\x32\x1f.fabric_message.sensor_locationB\x05\x82@\x02\x08\x01\"2\n\x0fsensor_location\x12\x0c\n\x08Linecard\x10\x01\x12\x11\n\rSwitch_Fabric\x10\x02\"\xd2\x02\n\nedge_stats\x12\x37\n\x0bsource_type\x18\x01 \x01(\x0e\x32\x1b.edge_stats.identifier_typeB\x05\x82@\x02\x08\x01\x12\x1a\n\x0bsource_slot\x18\x02 \x01(\rB\x05\x82@\x02\x08\x01\x12\x19\n\nsource_pfe\x18\x03 \x01(\rB\x05\x82@\x02\x08\x01\x12<\n\x10\x64\x65stination_type\x18\x04 \x01(\x0e\x32\x1b.edge_stats.identifier_typeB\x05\x82@\x02\x08\x01\x12\x1f\n\x10\x64\x65stination_slot\x18\x05 \x01(\rB\x05\x82@\x02\x08\x01\x12\x1e\n\x0f\x64\x65stination_pfe\x18\x06 \x01(\rB\x05\x82@\x02\x08\x01\x12!\n\x0b\x63lass_stats\x18\x07 \x03(\x0b\x32\x0c.class_stats\"2\n\x0fidentifier_type\x12\x11\n\rSwitch_Fabric\x10\x01\x12\x0c\n\x08Linecard\x10\x02\"J\n\x0b\x63lass_stats\x12\x17\n\x08priority\x18\x01 \x01(\tB\x05\x82@\x02\x08\x01\x12\"\n\x0ftransmit_counts\x18\x02 \x01(\x0b\x32\t.counters\"\xd6\x03\n\x08\x63ounters\x12\x16\n\x07packets\x18\x01 \x01(\x04\x42\x05\x82@\x02\x18\x01\x12\x14\n\x05\x62ytes\x18\x02 \x01(\x04\x42\x05\x82@\x02\x18\x01\x12!\n\x12packets_per_second\x18\x03 \x01(\x04\x42\x05\x82@\x02 \x01\x12\x1f\n\x10\x62ytes_per_second\x18\x04 \x01(\x04\x42\x05\x82@\x02 \x01\x12\x1b\n\x0c\x64rop_packets\x18\x05 \x01(\x04\x42\x05\x82@\x02\x18\x01\x12\x19\n\ndrop_bytes\x18\x06 \x01(\x04\x42\x05\x82@\x02\x18\x01\x12&\n\x17\x64rop_packets_per_second\x18\x07 \x01(\x04\x42\x05\x82@\x02 \x01\x12$\n\x15\x64rop_bytes_per_second\x18\x08 \x01(\x04\x42\x05\x82@\x02 \x01\x12\"\n\x13queue_depth_average\x18\t \x01(\x04\x42\x05\x82@\x02 \x01\x12\"\n\x13queue_depth_current\x18\n \x01(\x04\x42\x05\x82@\x02 \x01\x12\x1f\n\x10queue_depth_peak\x18\x0b \x01(\x04\x42\x05\x82@\x02 \x01\x12\"\n\x13queue_depth_maximum\x18\x0c \x01(\x04\x42\x05\x82@\x02 \x01\x12\x1c\n\rerror_packets\x18\r \x01(\x04\x42\x05\x82@\x02\x18\x01\x12\'\n\x18\x65rror_packets_per_second\x18\x0e \x01(\x04\x42\x05\x82@\x02 \x01:B\n\x10\x66\x61\x62ricMessageExt\x12\x17.JuniperNetworksSensors\x18\x02 \x01(\x0b\x32\x0f.fabric_message"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Fabric_message = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("fabric_message").msgclass
Fabric_message::Sensor_location = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("fabric_message.sensor_location").enummodule
Edge_stats = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("edge_stats").msgclass
Edge_stats::Identifier_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("edge_stats.identifier_type").enummodule
Class_stats = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("class_stats").msgclass
Counters = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("counters").msgclass
