# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cmerror_data.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x12\x63merror_data.proto\x1a\x13telemetry_top.proto\"\x8d\x03\n\tErrorData\x12\x19\n\nidentifier\x18\x01 \x01(\tB\x05\x82@\x02\x08\x01\x12\x14\n\x05\x63ount\x18\x02 \x01(\x04\x42\x05\x82@\x02\x18\x01\x12\x1b\n\x0clast_updated\x18\x03 \x01(\x04\x42\x05\x82@\x02\x10\x01\x12\x12\n\nis_enabled\x18\x04 \x01(\x08\x12\x11\n\tmodule_id\x18\x05 \x01(\r\x12\x14\n\x0c\x63omponent_id\x18\x06 \x01(\r\x12\x12\n\nerror_code\x18\x07 \x01(\r\x12\x1a\n\x0boccur_count\x18\x08 \x01(\rB\x05\x82@\x02\x18\x01\x12\x1c\n\rcleared_count\x18\t \x01(\rB\x05\x82@\x02\x18\x01\x12\x1e\n\x0flast_cleared_at\x18\n \x01(\x04\x42\x05\x82@\x02\x10\x01\x12\x1b\n\x0c\x61\x63tion_count\x18\x0b \x01(\rB\x05\x82@\x02\x18\x01\x12#\n\x14last_action_taken_at\x18\x0c \x01(\x04\x42\x05\x82@\x02\x10\x01\x12\x10\n\x08\x66ru_type\x18\r \x01(\t\x12\x10\n\x08\x66ru_slot\x18\x0e \x01(\r\x12\x13\n\x0b\x64\x65scription\x18\x0f \x01(\t\x12\x0c\n\x04help\x18\x10 \x01(\t\"<\n\x11\x45rrorResourceInfo\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\r\n\x05state\x18\x03 \x01(\r\"|\n\x0b\x43merrorData\x12\x1e\n\nerror_item\x18\x01 \x03(\x0b\x32\n.ErrorData\x12\x10\n\x08\x66ru_slot\x18\x02 \x01(\r\x12\x10\n\x08\x66ru_type\x18\x03 \x01(\t\x12)\n\rresource_item\x18\x04 \x03(\x0b\x32\x12.ErrorResourceInfo:D\n\x15jnpr_cmerror_data_ext\x12\x17.JuniperNetworksSensors\x18\x15 \x01(\x0b\x32\x0c.CmerrorData"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

ErrorData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ErrorData").msgclass
ErrorResourceInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ErrorResourceInfo").msgclass
CmerrorData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("CmerrorData").msgclass
