# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: svcset_telemetry.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x16svcset_telemetry.proto\x1a\x13telemetry_top.proto\"\xdb\x01\n\rServicesInfra\x12\'\n\x11svcs_plugins_info\x18\x01 \x03(\x0b\x32\x0c.PluginsInfo\x12&\n\x0fsvcset_cpu_info\x18\x02 \x03(\x0b\x32\r.CpuUsageInfo\x12&\n\x0fsvcset_mem_info\x18\x03 \x03(\x0b\x32\r.MemUsageInfo\x12&\n\x0fsvcset_svc_info\x18\x04 \x03(\x0b\x32\r.ServicesInfo\x12)\n\x13svcset_pktdrop_info\x18\x05 \x03(\x0b\x32\x0c.PktDropInfo\"\xb3\x02\n\x0bPluginsInfo\x12\x16\n\x0esp_num_plugins\x18\x01 \x01(\x04\x12\x0f\n\x07sp_name\x18\x02 \x01(\t\x12\x0e\n\x06sp_pid\x18\x03 \x01(\x04\x12\x13\n\x0bsp_data_evh\x18\x04 \x01(\x04\x12\x16\n\x0esp_control_evh\x18\x05 \x01(\x04\x12\x10\n\x08sp_class\x18\x06 \x01(\x04\x12\x16\n\x0esp_provider_id\x18\x07 \x01(\x04\x12\x11\n\tsp_app_id\x18\x08 \x01(\x04\x12\x17\n\x0fsp_plugin_flags\x18\t \x01(\x04\x12\x1c\n\x14sp_tcp_support_flags\x18\n \x01(\x04\x12\x18\n\x10sp_ev_class_base\x18\x0b \x01(\x04\x12\x16\n\x0esp_plugin_mask\x18\x0c \x01(\x04\x12\x18\n\x10sp_ev_class_name\x18\r \x03(\t\"\xe6\x01\n\x0c\x43puUsageInfo\x12\x11\n\tsvcset_id\x18\x01 \x01(\x04\x12\x19\n\x11svcset_id_present\x18\x02 \x01(\x04\x12\x1b\n\x13\x65xternal_svc_set_id\x18\x03 \x01(\x04\x12\x10\n\x08svc_type\x18\x04 \x01(\x04\x12\x14\n\x0csvc_set_type\x18\x05 \x01(\x04\x12\x14\n\x0csvc_set_name\x18\x06 \x01(\t\x12\x17\n\x0f\x63pu_utilization\x18\x07 \x01(\x04\x12\x10\n\x08\x63pu_zone\x18\x08 \x01(\x04\x12\x10\n\x08\x63pu_load\x18\t \x01(\x02\x12\x10\n\x08\x63pu_user\x18\n \x01(\t\"\x99\x02\n\x0cMemUsageInfo\x12\x11\n\tsvcset_id\x18\x01 \x01(\x04\x12\x19\n\x11svcset_id_present\x18\x02 \x01(\x04\x12\x1b\n\x13\x65xternal_svc_set_id\x18\x03 \x01(\x04\x12\x10\n\x08svc_type\x18\x04 \x01(\x04\x12\x14\n\x0csvc_set_type\x18\x05 \x01(\x04\x12\x14\n\x0csvc_set_name\x18\x06 \x01(\t\x12\x18\n\x10mem_percent_used\x18\x07 \x01(\x02\x12\x16\n\x0emem_bytes_used\x18\x08 \x01(\x04\x12\x10\n\x08mem_zone\x18\t \x01(\x04\x12\x19\n\x11policy_bytes_used\x18\n \x01(\x04\x12!\n\x19policy_bytes_used_percent\x18\x0b \x01(\x04\"\xa7\x02\n\x0cServicesInfo\x12\x11\n\tsvcset_id\x18\x01 \x01(\x04\x12\x19\n\x11svcset_id_present\x18\x02 \x01(\x04\x12\x1b\n\x13\x65xternal_svc_set_id\x18\x03 \x01(\x04\x12\x10\n\x08svc_type\x18\x04 \x01(\x04\x12\x14\n\x0csvc_set_type\x18\x05 \x01(\x04\x12\x14\n\x0csvc_set_name\x18\x06 \x01(\t\x12\x1b\n\x13internal_svc_set_id\x18\x07 \x01(\x04\x12\x1c\n\x14\x61\x63tive_svc_set_count\x18\x08 \x01(\x04\x12\x1b\n\x13total_svc_set_count\x18\t \x01(\x04\x12\x16\n\x0emem_bytes_used\x18\n \x01(\x04\x12\x1e\n\x16mem_bytes_used_percent\x18\x0b \x01(\x04\"\xf3\x02\n\x0bPktDropInfo\x12\x11\n\tsvcset_id\x18\x01 \x01(\x04\x12\x19\n\x11svcset_id_present\x18\x02 \x01(\x04\x12\x1b\n\x13\x65xternal_svc_set_id\x18\x03 \x01(\x04\x12\x10\n\x08svc_type\x18\x04 \x01(\x04\x12\x14\n\x0csvc_set_type\x18\x05 \x01(\x04\x12\x14\n\x0csvc_set_name\x18\x06 \x01(\t\x12\x16\n\x0ememlimit_drops\x18\x07 \x01(\x04\x12\x16\n\x0e\x63pulimit_drops\x18\x08 \x01(\x04\x12\x17\n\x0f\x66lowlimit_drops\x18\t \x01(\x04\x12\x16\n\x0eptclcopy_drops\x18\n \x01(\x04\x12\x1a\n\x12ingress_drop_flows\x18\x0b \x01(\x04\x12\x19\n\x11\x65gress_drop_flows\x18\x0c \x01(\x04\x12!\n\x19\x64rop_exceed_ingress_limit\x18\r \x01(\x04\x12 \n\x18\x64rop_exceed_egress_limit\x18\x0e \x01(\x04:A\n\x10jnprScvsInfraExt\x12\x17.JuniperNetworksSensors\x18N \x01(\x0b\x32\x0e.ServicesInfra"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

ServicesInfra = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ServicesInfra").msgclass
PluginsInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("PluginsInfo").msgclass
CpuUsageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("CpuUsageInfo").msgclass
MemUsageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("MemUsageInfo").msgclass
ServicesInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ServicesInfo").msgclass
PktDropInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("PktDropInfo").msgclass
