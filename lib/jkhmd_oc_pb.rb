# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: jkhmd_oc.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x0ejkhmd_oc.proto\x1a\x13telemetry_top.proto\"\x98\"\n\x13junos_kernel_health\x12\x33\n\x07\x63hassis\x18\xbf\x01 \x01(\x0b\x32!.junos_kernel_health.chassis_type\x12\x43\n\x0frouting_options\x18\xfd\x03 \x01(\x0b\x32).junos_kernel_health.routing_options_type\x12\x35\n\x08security\x18\xb7\x01 \x01(\x0b\x32\".junos_kernel_health.security_type\x12\x31\n\x06kernel\x18\xc0\x01 \x01(\x0b\x32 .junos_kernel_health.kernel_type\x12\x41\n\x0ekernel_ifstate\x18\xba\x01 \x01(\x0b\x32(.junos_kernel_health.kernel_ifstate_type\x1a\xc0\x05\n\x0c\x63hassis_type\x12:\n\x04gres\x18\xb5\x01 \x01(\x0b\x32+.junos_kernel_health.chassis_type.gres_type\x12:\n\x04issu\x18\xb6\x01 \x01(\x0b\x32+.junos_kernel_health.chassis_type.issu_type\x12V\n\x12\x61ggregated_devices\x18\xdf\x02 \x01(\x0b\x32\x39.junos_kernel_health.chassis_type.aggregated_devices_type\x1a\xf3\x01\n\tgres_type\x12\x11\n\tgres_time\x18\x33 \x01(\x04\x12\x1a\n\x12slave_connect_time\x18\x34 \x01(\x04\x12\x18\n\x10\x63onfigured_state\x18\x35 \x01(\t\x12\x1b\n\x13master_kernel_ready\x18\x36 \x01(\t\x12\x1a\n\x12slave_kernel_ready\x18\x37 \x01(\t\x12\x13\n\x0b\x65rror_state\x18\x38 \x01(\t\x12\x19\n\x10other_re_present\x18\x97\x01 \x01(\t\x12\x17\n\x0eother_re_alive\x18\x98\x01 \x01(\t\x12\x1b\n\x12is_protocol_master\x18\xa5\x01 \x01(\t\x1a>\n\tissu_type\x12\x15\n\rfailure_stage\x18\x33 \x01(\t\x12\x1a\n\x12\x63urrent_issu_stage\x18\x34 \x01(\t\x1a\xa9\x01\n\x17\x61ggregated_devices_type\x12\x1a\n\x11ps_lt_unstack_cnt\x18\xb7\x02 \x01(\r\x12\x1c\n\x13ps_ifl_ccc_down_cnt\x18\xb8\x02 \x01(\r\x12\x1d\n\x14rlt_lp_link_down_cnt\x18\xb9\x02 \x01(\r\x12\x17\n\x0e\x61\x65_unstack_cnt\x18\xba\x02 \x01(\r\x12\x1c\n\x13\x61\x65_lp_link_down_cnt\x18\xbb\x02 \x01(\r\x1a\xe9\x01\n\x14routing_options_type\x12X\n\x0fnonstop_routing\x18\xfe\x03 \x01(\x0b\x32>.junos_kernel_health.routing_options_type.nonstop_routing_type\x1aw\n\x14nonstop_routing_type\x12\x1e\n\x15jsr_split_failure_cnt\x18\xfa\x03 \x01(\r\x12\x1e\n\x15jsr_merge_failure_cnt\x18\xfb\x03 \x01(\r\x12\x1f\n\x16jsr_prl_queue_full_cnt\x18\xfc\x03 \x01(\r\x1a\'\n\rsecurity_type\x12\x16\n\x0everiexec_state\x18\x33 \x01(\t\x1a\x8c\x16\n\x0bkernel_type\x12\x45\n\npeer_infra\x18\xb8\x01 \x01(\x0b\x32\x30.junos_kernel_health.kernel_type.peer_infra_type\x12\x39\n\x04vpls\x18\xc9\x01 \x01(\x0b\x32*.junos_kernel_health.kernel_type.vpls_type\x12=\n\x06tunnel\x18\xca\x01 \x01(\x0b\x32,.junos_kernel_health.kernel_type.tunnel_type\x12\x43\n\tmulticast\x18\xcb\x01 \x01(\x0b\x32/.junos_kernel_health.kernel_type.multicast_type\x12\x37\n\x03tnp\x18\xe1\x01 \x01(\x0b\x32).junos_kernel_health.kernel_type.tnp_type\x12Q\n\x10record_meta_data\x18\xb9\x01 \x01(\x0b\x32\x36.junos_kernel_health.kernel_type.record_meta_data_type\x12=\n\x06rtsock\x18\x99\x01 \x01(\x0b\x32,.junos_kernel_health.kernel_type.rtsock_type\x12;\n\x05tcpip\x18\xd6\x04 \x01(\x0b\x32+.junos_kernel_health.kernel_type.tcpip_type\x1aM\n\x0fpeer_infra_type\x12\x1e\n\x16peer_pfeman_conn_drops\x18\x33 \x01(\r\x12\x1a\n\x12spurious_ppt_wkups\x18\x34 \x01(\r\x1aw\n\tvpls_type\x12\x1a\n\x11unicast_token_cnt\x18\xd5\x01 \x01(\r\x12\x1a\n\x11unicast_token_max\x18\xd6\x01 \x01(\r\x12\x18\n\x0f\x66lood_token_cnt\x18\xd7\x01 \x01(\r\x12\x18\n\x0f\x66lood_token_max\x18\xd8\x01 \x01(\r\x1a\x94\x01\n\x0btunnel_type\x12\x19\n\x10rpf_tunnelid_cnt\x18\xd9\x01 \x01(\r\x12\x19\n\x10rpf_tunnelid_max\x18\xda\x01 \x01(\r\x12\x1c\n\x13nonrpf_tunnelid_cnt\x18\xdb\x01 \x01(\r\x12\x1c\n\x13nonrpf_tunnelid_max\x18\xdc\x01 \x01(\r\x12\x13\n\nlooped_cnt\x18\xdd\x01 \x01(\r\x1aI\n\x0emulticast_type\x12\x1c\n\x13iifmismatch_err_cnt\x18\xde\x01 \x01(\x04\x12\x19\n\x10rslv_req_err_cnt\x18\xdf\x01 \x01(\x04\x1a\x43\n\x08tnp_type\x12\x1b\n\x12tnp_hello_drop_cnt\x18\xd3\x01 \x01(\x04\x12\x1a\n\x11tnp_frag_drop_cnt\x18\xd4\x01 \x01(\x04\x1a,\n\x15record_meta_data_type\x12\x13\n\x0brecord_time\x18\x33 \x01(\x04\x1a@\n\x0brtsock_type\x12\x17\n\x0etotal_veto_cnt\x18\x94\x01 \x01(\x04\x12\x18\n\x0ftotal_error_cnt\x18\x95\x01 \x01(\x04\x1a\x8f\r\n\ntcpip_type\x12\x42\n\x03tcp\x18\xff\x03 \x01(\x0b\x32\x34.junos_kernel_health.kernel_type.tcpip_type.tcp_type\x12\x46\n\x05nhidx\x18\xd1\x04 \x01(\x0b\x32\x36.junos_kernel_health.kernel_type.tcpip_type.nhidx_type\x12\x42\n\x03rtb\x18\xd2\x04 \x01(\x0b\x32\x34.junos_kernel_health.kernel_type.tcpip_type.rtb_type\x12\x42\n\x03\x61rp\x18\xd3\x04 \x01(\x0b\x32\x34.junos_kernel_health.kernel_type.tcpip_type.arp_type\x12\x42\n\x03ndp\x18\xd4\x04 \x01(\x0b\x32\x34.junos_kernel_health.kernel_type.tcpip_type.ndp_type\x12H\n\x06netisr\x18\xd5\x04 \x01(\x0b\x32\x37.junos_kernel_health.kernel_type.tcpip_type.netisr_type\x1a\x61\n\x08tcp_type\x12\x1c\n\x13tcp_ddos_attack_cnt\x18\xf6\x03 \x01(\r\x12\x1a\n\x11tcp_conndrops_cnt\x18\xf7\x03 \x01(\r\x12\x1b\n\x12tcp_time_wait_conn\x18\xf8\x03 \x01(\x04\x1av\n\nnhidx_type\x12\x18\n\x0fnexthop_pub_max\x18\x91\x03 \x01(\r\x12\x19\n\x10nexthop_priv_max\x18\x92\x03 \x01(\r\x12\x18\n\x0fnexthop_pub_cnt\x18\x93\x03 \x01(\r\x12\x19\n\x10nexthop_priv_cnt\x18\x94\x03 \x01(\r\x1a>\n\x08rtb_type\x12\x18\n\x0froute_clone_max\x18\x95\x03 \x01(\r\x12\x18\n\x0froute_clone_cnt\x18\x96\x03 \x01(\r\x1a\x98\x02\n\x08\x61rp_type\x12\x19\n\x10nbrcache_iri_max\x18\x97\x03 \x01(\r\x12\x1a\n\x11nbrcache_mgmt_max\x18\x98\x03 \x01(\r\x12\x1c\n\x13nbrcache_public_max\x18\x99\x03 \x01(\r\x12\x19\n\x10nbrcache_iri_cnt\x18\x9a\x03 \x01(\r\x12\x1a\n\x11nbrcache_mgmt_cnt\x18\x9b\x03 \x01(\r\x12\x1c\n\x13nbrcache_public_cnt\x18\x9c\x03 \x01(\r\x12\x1e\n\x15nbrcache_iri_drop_cnt\x18\x9d\x03 \x01(\r\x12\x1f\n\x16nbrcache_mgmt_drop_cnt\x18\x9e\x03 \x01(\r\x12!\n\x18nbrcache_public_drop_cnt\x18\x9f\x03 \x01(\r\x1a\x98\x02\n\x08ndp_type\x12\x19\n\x10nbrcache_iri_max\x18\xa0\x03 \x01(\r\x12\x1a\n\x11nbrcache_mgmt_max\x18\xa1\x03 \x01(\r\x12\x1c\n\x13nbrcache_public_max\x18\xa2\x03 \x01(\r\x12\x19\n\x10nbrcache_iri_cnt\x18\xa3\x03 \x01(\r\x12\x1a\n\x11nbrcache_mgmt_cnt\x18\xa4\x03 \x01(\r\x12\x1c\n\x13nbrcache_public_cnt\x18\xa5\x03 \x01(\r\x12\x1e\n\x15nbrcache_iri_drop_cnt\x18\xa6\x03 \x01(\r\x12\x1f\n\x16nbrcache_mgmt_drop_cnt\x18\xa7\x03 \x01(\r\x12!\n\x18nbrcache_public_drop_cnt\x18\xa8\x03 \x01(\r\x1a\x8d\x03\n\x0bnetisr_type\x12\x15\n\x0c\x65ther_wm_cnt\x18\xa9\x03 \x01(\r\x12\x17\n\x0e\x65ther_drop_cnt\x18\xaa\x03 \x01(\r\x12\x1a\n\x11\x65ther_pkt_handled\x18\xab\x03 \x01(\x04\x12\x19\n\x10\x65ther_pkt_queued\x18\xac\x03 \x01(\x04\x12\x12\n\tip_wm_cnt\x18\xad\x03 \x01(\r\x12\x14\n\x0bip_drop_cnt\x18\xae\x03 \x01(\r\x12\x17\n\x0eip_pkt_handled\x18\xaf\x03 \x01(\x04\x12\x16\n\rip_pkt_queued\x18\xb0\x03 \x01(\x04\x12\x13\n\nip6_wm_cnt\x18\xb1\x03 \x01(\r\x12\x15\n\x0cip6_drop_cnt\x18\xb2\x03 \x01(\r\x12\x18\n\x0fip6_pkt_handled\x18\xb3\x03 \x01(\x04\x12\x17\n\x0eip6_pkt_queued\x18\xb4\x03 \x01(\x04\x12\x13\n\narp_wm_cnt\x18\xb5\x03 \x01(\r\x12\x15\n\x0c\x61rp_drop_cnt\x18\xb6\x03 \x01(\r\x12\x18\n\x0f\x61rp_pkt_handled\x18\xb7\x03 \x01(\x04\x12\x17\n\x0e\x61rp_pkt_queued\x18\xb8\x03 \x01(\x04\x1a\xf2\x01\n\x13kernel_ifstate_type\x12\x19\n\x11\x64\x65\x61\x64_ifstates_cnt\x18\x33 \x01(\r\x12\x1a\n\x12\x61live_ifstates_cnt\x18\x34 \x01(\r\x12\x1a\n\x12\x64\x65layed_unrefs_cnt\x18\x35 \x01(\r\x12\x1a\n\x12\x64\x65layed_unrefs_max\x18\x36 \x01(\r\x12\x19\n\x11stuck_clients_cnt\x18\x37 \x01(\r\x12\x18\n\x10\x64\x65\x61\x64_clients_cnt\x18\x38 \x01(\r\x12\x19\n\x11\x61live_clients_cnt\x18\x39 \x01(\r\x12\x1c\n\x14\x63lient_limit_reached\x18: \x01(\r:S\n\x1cjnpr_junos_kernel_health_ext\x12\x17.JuniperNetworksSensors\x18U \x01(\x0b\x32\x14.junos_kernel_health"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Junos_kernel_health = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health").msgclass
Junos_kernel_health::Chassis_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.chassis_type").msgclass
Junos_kernel_health::Chassis_type::Gres_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.chassis_type.gres_type").msgclass
Junos_kernel_health::Chassis_type::Issu_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.chassis_type.issu_type").msgclass
Junos_kernel_health::Chassis_type::Aggregated_devices_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.chassis_type.aggregated_devices_type").msgclass
Junos_kernel_health::Routing_options_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.routing_options_type").msgclass
Junos_kernel_health::Routing_options_type::Nonstop_routing_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.routing_options_type.nonstop_routing_type").msgclass
Junos_kernel_health::Security_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.security_type").msgclass
Junos_kernel_health::Kernel_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type").msgclass
Junos_kernel_health::Kernel_type::Peer_infra_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.peer_infra_type").msgclass
Junos_kernel_health::Kernel_type::Vpls_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.vpls_type").msgclass
Junos_kernel_health::Kernel_type::Tunnel_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tunnel_type").msgclass
Junos_kernel_health::Kernel_type::Multicast_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.multicast_type").msgclass
Junos_kernel_health::Kernel_type::Tnp_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tnp_type").msgclass
Junos_kernel_health::Kernel_type::Record_meta_data_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.record_meta_data_type").msgclass
Junos_kernel_health::Kernel_type::Rtsock_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.rtsock_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type::Tcp_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type.tcp_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type::Nhidx_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type.nhidx_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type::Rtb_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type.rtb_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type::Arp_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type.arp_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type::Ndp_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type.ndp_type").msgclass
Junos_kernel_health::Kernel_type::Tcpip_type::Netisr_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_type.tcpip_type.netisr_type").msgclass
Junos_kernel_health::Kernel_ifstate_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_kernel_health.kernel_ifstate_type").msgclass
