# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pfe_npu_resource.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x16pfe_npu_resource.proto\x1a\x13telemetry_top.proto\"W\n\rjunos_pfe_npu\x12\x33\n\nnpu_memory\x18\x97\x01 \x03(\x0b\x32\x1e.junos_pfe_npu.npu_memory_list\x1a\x11\n\x0fnpu_memory_list:G\n\x16jnpr_junos_pfe_npu_ext\x12\x17.JuniperNetworksSensors\x18; \x01(\x0b\x32\x0e.junos_pfe_npu"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Junos_pfe_npu = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_pfe_npu").msgclass
Junos_pfe_npu::Npu_memory_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("junos_pfe_npu.npu_memory_list").msgclass
