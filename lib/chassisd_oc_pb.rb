# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chassisd_oc.proto

require 'google/protobuf'

require 'telemetry_top_pb'


descriptor_data = "\n\x11\x63hassisd_oc.proto\x1a\x13telemetry_top.proto\"\xbd\x17\n\ncomponents\x12.\n\tcomponent\x18\x97\x01 \x03(\x0b\x32\x1a.components.component_list\x1a\xfe\x16\n\x0e\x63omponent_list\x12\x13\n\x04name\x18\x33 \x01(\tB\x05\x82@\x02\x08\x01\x12\x35\n\x05state\x18\x98\x01 \x01(\x0b\x32%.components.component_list.state_type\x12\x33\n\x04port\x18\x97\x01 \x01(\x0b\x32$.components.component_list.port_type\x12?\n\nproperties\x18\x9c\x01 \x01(\x0b\x32*.components.component_list.properties_type\x12\x45\n\rsubcomponents\x18\x99\x01 \x01(\x0b\x32-.components.component_list.subcomponents_type\x12\x41\n\x0btransceiver\x18\xa1\x01 \x01(\x0b\x32+.components.component_list.transceiver_type\x1a\xbc\x04\n\nstate_type\x12\x0c\n\x04name\x18\x33 \x01(\t\x12\x0c\n\x04type\x18\x34 \x01(\t\x12\n\n\x02id\x18\x35 \x01(\t\x12\x10\n\x08location\x18\x36 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x37 \x01(\t\x12\x10\n\x08mfg_name\x18\x38 \x01(\t\x12\x10\n\x08mfg_date\x18\x39 \x01(\t\x12\x18\n\x10hardware_version\x18: \x01(\t\x12\x18\n\x10\x66irmware_version\x18; \x01(\t\x12\x18\n\x10software_version\x18< \x01(\t\x12\x11\n\tserial_no\x18= \x01(\t\x12\x0f\n\x07part_no\x18> \x01(\t\x12\x11\n\tremovable\x18? \x01(\x08\x12\x13\n\x0boper_status\x18@ \x01(\t\x12\r\n\x05\x65mpty\x18\x41 \x01(\x08\x12\x0e\n\x06parent\x18\x42 \x01(\t\x12L\n\x0btemperature\x18\xa0\x01 \x01(\x0b\x32\x36.components.component_list.state_type.temperature_type\x12\x42\n\x06memory\x18\xaa\x01 \x01(\x0b\x32\x31.components.component_list.state_type.memory_type\x12\x17\n\x0f\x61llocated_power\x18\x43 \x01(\r\x1a#\n\x10temperature_type\x12\x0f\n\x07instant\x18Q \x01(\x01\x1a\x32\n\x0bmemory_type\x12\x11\n\tavailable\x18[ \x01(\x04\x12\x10\n\x08utilized\x18\\ \x01(\x04\x1a\xb4\x04\n\tport_type\x12O\n\rbreakout_mode\x18\x97\x01 \x01(\x0b\x32\x37.components.component_list.port_type.breakout_mode_type\x1a\xd5\x03\n\x12\x62reakout_mode_type\x12T\n\x06groups\x18\x97\x01 \x01(\x0b\x32\x43.components.component_list.port_type.breakout_mode_type.groups_type\x1a\xe8\x02\n\x0bgroups_type\x12^\n\x05group\x18\x97\x01 \x03(\x0b\x32N.components.component_list.port_type.breakout_mode_type.groups_type.group_list\x1a\xf8\x01\n\ngroup_list\x12\x14\n\x05index\x18\x33 \x01(\rB\x05\x82@\x02\x08\x01\x12i\n\x05state\x18\x97\x01 \x01(\x0b\x32Y.components.component_list.port_type.breakout_mode_type.groups_type.group_list.state_type\x1ai\n\nstate_type\x12\r\n\x05index\x18\x35 \x01(\r\x12\x15\n\rnum_breakouts\x18\x36 \x01(\r\x12\x16\n\x0e\x62reakout_speed\x18\x37 \x01(\t\x12\x1d\n\x15num_physical_channels\x18\x38 \x01(\r\x1a\x8d\x02\n\x0fproperties_type\x12K\n\x08property\x18\x97\x01 \x03(\x0b\x32\x38.components.component_list.properties_type.property_list\x1a\xac\x01\n\rproperty_list\x12\x13\n\x04name\x18\x33 \x01(\tB\x05\x82@\x02\x08\x01\x12S\n\x05state\x18\x97\x01 \x01(\x0b\x32\x43.components.component_list.properties_type.property_list.state_type\x1a\x31\n\nstate_type\x12\r\n\x05value\x18\x33 \x01(\t\x12\x14\n\x0c\x63onfigurable\x18\x34 \x01(\x08\x1a\x8f\x02\n\x12subcomponents_type\x12V\n\x0csubcomponent\x18\x97\x01 \x03(\x0b\x32?.components.component_list.subcomponents_type.subcomponent_list\x1a\xa0\x01\n\x11subcomponent_list\x12\x13\n\x04name\x18\x33 \x01(\tB\x05\x82@\x02\x08\x01\x12Z\n\x05state\x18\x97\x01 \x01(\x0b\x32J.components.component_list.subcomponents_type.subcomponent_list.state_type\x1a\x1a\n\nstate_type\x12\x0c\n\x04name\x18\x33 \x01(\t\x1a\x87\x07\n\x10transceiver_type\x12\x46\n\x05state\x18\xa2\x01 \x01(\x0b\x32\x36.components.component_list.transceiver_type.state_type\x12^\n\x11physical_channels\x18\xbf\x01 \x01(\x0b\x32\x42.components.component_list.transceiver_type.physical_channels_type\x1a\xd8\x02\n\nstate_type\x12\x1c\n\x13\x66orm_factor_preconf\x18\xff\x01 \x01(\t\x12\x1d\n\x14\x65thernet_pmd_preconf\x18\x80\x02 \x01(\t\x12\x10\n\x07present\x18\x8a\x02 \x01(\t\x12\x14\n\x0b\x66orm_factor\x18\x81\x02 \x01(\t\x12\x17\n\x0e\x63onnector_type\x18\x82\x02 \x01(\t\x12\x0f\n\x06vendor\x18\x83\x02 \x01(\t\x12\x14\n\x0bvendor_part\x18\x84\x02 \x01(\t\x12\x13\n\nvendor_rev\x18\x85\x02 \x01(\t\x12\x15\n\x0c\x65thernet_pmd\x18\x86\x02 \x01(\t\x12\"\n\x19sonet_sdh_compliance_code\x18\x87\x02 \x01(\t\x12\x1c\n\x13otn_compliance_code\x18\x88\x02 \x01(\t\x12\x12\n\tserial_no\x18\x89\x02 \x01(\t\x12\x12\n\tdate_code\x18\x9e\x02 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x33 \x01(\x08\x1a\xef\x02\n\x16physical_channels_type\x12`\n\x07\x63hannel\x18[ \x03(\x0b\x32O.components.component_list.transceiver_type.physical_channels_type.channel_list\x1a\xf2\x01\n\x0c\x63hannel_list\x12\x15\n\x05index\x18\xbf\x01 \x01(\rB\x05\x82@\x02\x08\x01\x12j\n\x05state\x18\xd1\x06 \x01(\x0b\x32Z.components.component_list.transceiver_type.physical_channels_type.channel_list.state_type\x1a_\n\nstate_type\x12\r\n\x05index\x18\' \x01(\r\x12\x13\n\x0b\x64\x65scription\x18) \x01(\t\x12\x10\n\x08tx_laser\x18* \x01(\x08\x12\x1b\n\x13target_output_power\x18+ \x01(\x01:A\n\x13jnpr_components_ext\x12\x17.JuniperNetworksSensors\x18( \x01(\x0b\x32\x0b.components"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

Components = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components").msgclass
Components::Component_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list").msgclass
Components::Component_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.state_type").msgclass
Components::Component_list::State_type::Temperature_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.state_type.temperature_type").msgclass
Components::Component_list::State_type::Memory_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.state_type.memory_type").msgclass
Components::Component_list::Port_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.port_type").msgclass
Components::Component_list::Port_type::Breakout_mode_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.port_type.breakout_mode_type").msgclass
Components::Component_list::Port_type::Breakout_mode_type::Groups_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.port_type.breakout_mode_type.groups_type").msgclass
Components::Component_list::Port_type::Breakout_mode_type::Groups_type::Group_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.port_type.breakout_mode_type.groups_type.group_list").msgclass
Components::Component_list::Port_type::Breakout_mode_type::Groups_type::Group_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.port_type.breakout_mode_type.groups_type.group_list.state_type").msgclass
Components::Component_list::Properties_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.properties_type").msgclass
Components::Component_list::Properties_type::Property_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.properties_type.property_list").msgclass
Components::Component_list::Properties_type::Property_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.properties_type.property_list.state_type").msgclass
Components::Component_list::Subcomponents_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.subcomponents_type").msgclass
Components::Component_list::Subcomponents_type::Subcomponent_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.subcomponents_type.subcomponent_list").msgclass
Components::Component_list::Subcomponents_type::Subcomponent_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.subcomponents_type.subcomponent_list.state_type").msgclass
Components::Component_list::Transceiver_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.transceiver_type").msgclass
Components::Component_list::Transceiver_type::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.transceiver_type.state_type").msgclass
Components::Component_list::Transceiver_type::Physical_channels_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.transceiver_type.physical_channels_type").msgclass
Components::Component_list::Transceiver_type::Physical_channels_type::Channel_list = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.transceiver_type.physical_channels_type.channel_list").msgclass
Components::Component_list::Transceiver_type::Physical_channels_type::Channel_list::State_type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("components.component_list.transceiver_type.physical_channels_type.channel_list.state_type").msgclass
